---
jobs:
- name: deploy-admin-ui-staging
  serial: true
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: admin-ui-config
      trigger: true
    - get: admin-ui-release
      trigger: true
    - get: admin-ui-stemcell-bionic
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-staging
  - put: admin-ui-staging-deployment
    params:
      manifest: admin-ui-config/bosh/manifest.yml
      vars_files:
      - terraform-yaml/state.yml
      - admin-ui-config/bosh/varsfiles/staging.yml
      releases:
      - admin-ui-release/*.tgz
      stemcells:
      - admin-ui-stemcell-bionic/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy admin-ui on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed admin-ui on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-admin-ui-production
  serial: true
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: admin-ui-config
      passed: [deploy-admin-ui-staging]
      trigger: true
    - get: admin-ui-release
      passed: [deploy-admin-ui-staging]
      trigger: true
    - get: admin-ui-stemcell-bionic
      passed: [deploy-admin-ui-staging]
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-production
  - put: admin-ui-production-deployment
    params:
      manifest: admin-ui-config/bosh/manifest.yml
      vars_files:
      - terraform-yaml/state.yml
      - admin-ui-config/bosh/varsfiles/production.yml
      releases:
      - admin-ui-release/*.tgz
      stemcells:
      - admin-ui-stemcell-bionic/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy admin-ui on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed admin-ui on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: admin-ui-release
  type: s3-iam
  source:
    bucket: {{s3-bosh-releases-bucket}}
    regexp: admin-ui-(.*).tgz
    region_name: {{aws-region}}

- name: admin-ui-config
  type: git
  source:
    uri: {{cg-deploy-admin-ui-git-url}}
    branch: {{cg-deploy-admin-ui-git-branch}}

- name: admin-ui-stemcell-bionic
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-bionic-go_agent

- name: admin-ui-staging-deployment
  type: bosh-deployment
  source:
    target: {{admin-ui-staging-deployment-bosh-target}}
    client: {{admin-ui-staging-deployment-bosh-client}}
    client_secret: {{admin-ui-staging-deployment-bosh-client-secret}}
    deployment: {{admin-ui-staging-deployment-bosh-deployment}}
    ca_cert: {{admin-ui-staging-deployment-ca-cert}}

- name: admin-ui-production-deployment
  type: bosh-deployment
  source:
    target: {{admin-ui-production-deployment-bosh-target}}
    client: {{admin-ui-production-deployment-bosh-client}}
    client_secret: {{admin-ui-production-deployment-bosh-client-secret}}
    deployment: {{admin-ui-production-deployment-bosh-deployment}}
    ca_cert: {{admin-ui-production-deployment-ca-cert}}

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: {{tf-state-bucket-staging}}
    versioned_file: {{tf-state-file-staging}}
    region_name: {{aws-region}}

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: {{tf-state-bucket-production}}
    versioned_file: {{tf-state-file-production}}
    region_name: {{aws-region}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
